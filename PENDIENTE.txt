

PREGUNTA AL CLIENTE:

???habiamos hablado de que el usuario tenia algo asi como una semana para pagar, que hacemos si pasa la semana y no paga???

Las calificaciones entre usuarios son: de un usuario para otro que se hace una unica vez (y que se pueda editar), o una calificacion de un usuario a otro por cada viaje que hace con el???


considerando que se le esta dando al usuario la libertad de pagar despues usado el servicio, cosa que en la vida real puede ser explotado con multiples cuentas que se usan para no pagar nunca.
Tendriamos que buscar la manera de evitar esto, por ejemplo haciendo que al momento de registrarse se tenga que asociar una tarjeta? (mas alla de que no se generen cargos por el momento)




PREGUNTA AL AYUDANTE DE DOCUMENTACION Y SIMILARES:

Las minutas vendrian a ser esto que pusimos ahi no, esta bien con tener eso???



PREGUNTA AL AYUDANTE DEL DIAGRAMA:

???considreando que esto es una simulacion, onda no vamos a realmente realizar transacciones con una tarjeta de credito de verdad, como hariamos para implementar la parte del pago???
que elementos deberia pedir el pago con tarjeta (nro de tarjeta, codigo de seguridad, nombre del titular???)??? Como validamos los datos???

Hay que especificar en el diagrama alguna clase relacionada a la bases de datos??? y alguna relacionada a la interfaz de usuario???

??por el momento en el diagrama tenemos definidas varias clases con sus responsabilidades, ahora la pregunta es, como es que arranca la ejecucion del codigo??? en objetos 1 con pharo NO se le daba mucha importancia a eso porque podias ejecutar codigo desde el IDE, pero aca creo se necesitaria algo por donde arrancar, cosa que pensabamos hacer con el objeto TravelShare, estaria bien??? y que tendriamos que hacer al arrancar la ejecucion del programa???  necesitaria definir un metodo para lo que sea que haga la pagina apenas se abre???



CONSIDREACIONES GENERALES A TENER EN CUENTA (MAS A LARGO PLAZO):

recordar que segun el ayudante, lo mejor va a ser hacer lo mayor posible en PHP, y dejar lo menos posible para el front end (mas que nada validaciones)

Eso si, es necesario hacerse cargo de todas las validaciones posibles en el frontend, para evitar trabajo de mas en el backend. ??aunque imagino que ciertas validaciones deben hacerse en el backend para evitar vulnerabilidades???


